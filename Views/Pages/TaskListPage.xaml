<Page x:Class="TaskTip.Pages.TaskListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TaskTip.Views"
      xmlns:uc="clr-namespace:TaskTip.Views.UserControls"
      xmlns:hc="https://handyorg.github.io/handycontrol"
      xmlns:viewModel="clr-namespace:TaskTip.ViewModels"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:pageModel="clr-namespace:TaskTip.ViewModels.PageModel"
      mc:Ignorable="d" >

    <Page.DataContext>
        <pageModel:TaskListPageModel/>
    </Page.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding TaskLoadedCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding TaskUnloadedCommand}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid  Background="{StaticResource ThemeBackground}" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0" CornerRadius="5" BorderThickness="1" Margin="5" BorderBrush="Gray" Background="White">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Style="{x:Null}" Text="{Binding SearchStr}" Margin="5,0" FontSize="15" VerticalAlignment="Center" BorderThickness="0" Background="Transparent"></TextBox>
                <Button Grid.Column="1" Style="{x:Null}" Background="Transparent" BorderThickness="1,0,0,0" Command="{Binding SearchDataHandlerCommand}">
                    <Image Source="{StaticResource Search}"></Image>
                </Button>
            </Grid>
        </Border>
        <hc:SimplePanel Grid.Row="1" x:Name="TaskListPanel"  HorizontalAlignment="Stretch" >
            <Border BorderThickness="0" BorderBrush="Transparent" CornerRadius="0,0,6,6">
                <ScrollViewer x:Name="ListScroll">
                    <ListBox  ItemsSource="{Binding TaskList}" Padding="0" Background="Transparent"
                HorizontalAlignment="Stretch" BorderThickness="0" 
                hc:ScrollViewerAttach.IsDisabled="True" FocusManager.GotFocus="ListBox_GotFocus">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter  Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border CornerRadius="10" 
    BorderThickness="1" BorderBrush="Gray" Margin="0,5"
    Background="{Binding CurrentTaskStatus, Converter={StaticResource TaskProgressConvert}}">
                                    <Grid HorizontalAlignment="Stretch" Margin="5">
                                        <Grid.Background>
                                            Transparent
                                        </Grid.Background>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <!-- 勾选框 -->
                                            <CheckBox IsTabStop="True" Grid.Column="0" 
                    IsChecked="{Binding IsCompleted}" VerticalAlignment="Center" Margin="5" Focusable="False" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.ModelChangedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.ModelChangedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </CheckBox>
                                            <!-- 任务标题 -->
                                            <TextBox Grid.Column="1" AcceptsReturn="False" AcceptsTab="False" 
                    MaxLength="20" Margin="5" HorizontalAlignment="Stretch" 
                    Text="{Binding EditTextTitle,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FontWeight="ExtraBlack" IsEnabled="{Binding IsCompleted,Converter={StaticResource Boolean2BooleanReConverter}}" 
                    FontSize="15" SelectionStart="5"  
                    TextWrapping="Wrap" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.ModelChangedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                            <!-- 计时按钮 -->
                                            <Button Grid.Column="2" Background="Transparent" BorderThickness="0"
                IsEnabled="{Binding IsCompleted,Converter={StaticResource Boolean2BooleanReConverter}}" Focusable="False" Padding="0"
                Command="{Binding DataContext.SelectPlanTimeCommand,RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}">
                                                <Image Source="{StaticResource Clock}" />
                                            </Button>
                                            <!-- 删除按钮 -->
                                            <Button TabIndex="0" Grid.Column="3" HorizontalAlignment="Right" 
                Background="Transparent" BorderThickness="0" Padding="0" Margin="5" 
                Command="{Binding DataContext.DeleteItemCommand,RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}" IsEnabled="{Binding IsCompleted,Converter={StaticResource Boolean2BooleanReConverter}}" Focusable="False">
                                                <Image Source="{StaticResource Trash}" />
                                            </Button>
                                        </Grid>
                                        <!-- 完成线 -->
                                        <Line HorizontalAlignment="Stretch" x:Name="CompletedLine" X1="0" Y1="20" X2="5500" Y2="20" 
            Stroke="DimGray" StrokeThickness="3" Visibility="{Binding IsCompleted,Converter={StaticResource Boolean2VisibilityConverter}}" />
                                        <Grid Grid.Row="1">
                                            <!-- 任务详细描述 -->
                                            <TextBox TabIndex="0" 
                    Text="{Binding EditTextText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                    AcceptsReturn="True" AcceptsTab="True" MinLines="1" 
                    Visibility="{Binding IsFocus,Converter={StaticResource Boolean2VisibilityConverter}}" Focusable="True" FontSize="12" 
                    SelectionStart="5" IsEnabled="{Binding IsCompleted,Converter={StaticResource Boolean2BooleanReConverter}}" TextWrapping="Wrap" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.ModelChangedCommand,RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <hc:Interaction.Triggers>
                        <hc:EventTrigger EventName="ScrollChanged">
                            <hc:InvokeCommandAction Command="{Binding ScrollChangedCommand}" CommandParameter="{Binding ElementName=ListScroll}"></hc:InvokeCommandAction>
                        </hc:EventTrigger>
                    </hc:Interaction.Triggers>
                </ScrollViewer>
            </Border>
            <Border Background="Transparent" Width="50" Height="50" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,20,140" CornerRadius="25" BorderThickness="1" BorderBrush="#FFE0E0E0">

                <Button x:Name="NewTask"  Padding="0" Background="{StaticResource ThemeBackground}"  BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Command="{Binding AddTaskListCommand}">
                    <Image Source="{StaticResource Add}" Stretch="Uniform" />
                </Button>
            </Border>
            <Border Background="Transparent" Width="50" Height="50" Padding="0" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,20,80" CornerRadius="25" BorderThickness="1" BorderBrush="#FFE0E0E0">

                <Button x:Name="SendDaily"  Padding="0" Command="{Binding SendDailyMessageCommand}" Background="{StaticResource ThemeBackground}" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Image Source="{StaticResource Send}" Stretch="Uniform" Width="25" Height="25" />
                </Button>
            </Border>
            <hc:GotoTop Animated="True" AutoHiding="True" AnimationTime="500" Background="{StaticResource ThemeBackground}" 
                                            Target="{Binding ElementName=TaskListPanel}"
                                            HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                            Margin="0,0,20,20"/>
        </hc:SimplePanel>
        <hc:LoadingCircle Height="100" Width="100" Visibility="{Binding LoadingVisibility}"></hc:LoadingCircle>
    </Grid>

</Page>
